<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us">
  <id>https://leebyron.com/til/feed.xml</id>
  <link rel="self" type="application/atom+xml" href="https://leebyron.com/til/feed.xml"/>
  <link rel="alternate" type="text/html" href="https://leebyron.com/til/"/>
  <updated>2022-01-13T05:15:12.000+00:00</updated>
  <title>Lee Byron / til</title>
  <subtitle>
    Today I Learned: A bunch of brief blurbs on miscellaneous matter.
  </subtitle>
  <icon>https://leebyron.com/til/assets/favicon.png</icon>
  <author>
    <name>Lee Byron</name>
    <uri>https://leebyron.com</uri>
  </author>
  <rights>© 2022 Lee Byron ⸱ licensed under CC BY 4.0</rights>
  <generator uri="https://github.com/leebyron/til">til</generator>
  <entry>
    <id>https://leebyron.com/til/leap/</id>
    <link rel="alternate" type="text/html" href="https://leebyron.com/til/leap/"/>
    <published>2022-01-12T20:01:10.000-08:00</published>
    <updated>2022-01-13T05:15:12.000+00:00</updated>
    <title>leap®</title>
    <author>
      <name>Lee Byron</name>
      <uri>https://leebyron.com</uri>
    </author>
    <category term="keyboards"/>
    <content type="html"><![CDATA[<p>
  The <a href="https://en.wikipedia.org/wiki/Canon_Cat" target="_blank">Canon Cat</a> was a computer designed by <a href="https://en.wikipedia.org/wiki/Jef_Raskin" target="_blank">Jef Raskin</a>, who also dreamed up the
Apple Macintosh. Steve Jobs meddled too much in the Mac and Raskin left Apple to
create the Cat. It was a commercial flop, but had some awesome ideas mostly lost
to time.
</p>
<p>
  Raskin was no fan of the computer mouse and thought keyboard driven UIs could be
much more powerful, and the Cat has a couple tricks which show that he was truly
onto something, most notably: LEAP.
</p>
<p>
  The Cat keyboard is really unique. This computer has no mouse and no arrow
keys<a href="#fn-creep" id="fn-creep.ref" data-footnote-ref aria-label="note"><sup>1</sup></a>. Instead it has &quot;Leap&quot; keys under the space bar. To move around you
hold down a Leap key with your thumb (in the direction you want to move) and
start typing the thing you want to move to. The cursor moves in real-time with
each key press. If you got it wrong you can hit &quot;Undo&quot; to go back, or to keep
looking for the same thing, use front to &quot;Leap Again&quot;. There's a dedicated
&quot;Page&quot; button so you can Leap through page by page to rapidly move through a
large file (or press it on its own to create a new blank page).
</p>
<p>
  <img src="https://vintagecomputer.ca/wp-content/uploads/2016/04/Canon-Cat-keyboard.jpg">
</p>
<p>
  This is so different from what we're used to that it seems like it might be
frustrating to use and rightfully part of history instead of current kit, but I
find this inspiring. I wish I could get my computer to work this way!
</p>
<p>
  I've been using VIM exclusively the last few weeks and trying to get used to it.
I'm realizing that I spend way more time <em>moving around</em> then I actually do
typing new things. I've come to really appreciate the <code>/</code> and <code>?</code> commands which
search ahead and back for some text to move towards. It's very powerful, but
slightly awkward to use, so I find myself not using it as much as I should.
Having that functionality under my thumbs would feel like a super power.
</p>
<p>
  There aren't that many Canon Cats still floating around, but if you want to get
a feel for what using one of these is like, you can run its
<a href="https://archive.org/details/canoncat" target="_blank">software in emulation mode</a> thanks to the
Internet Archive!
</p>
<p>
  It's not all that clear, but here's what I figured out so far:
</p>
<ul>
  <li>
    <p>
      option keys (left and right) are Jump
    </p>
  </li>
  <li>
    <p>
      <code>\</code> key is Undo
    </p>
  </li>
  <li>
    <p>
      control is &quot;Use Front&quot;
    </p>
  </li>
  <li>
    <p>
      Full screen the emulator to immerse yourself!
    </p>
  </li>
</ul>
<p>
  Obviously, it's not quite the same as having the Cat keyboard in front of you,
but I still found it very curious to use and gave me confidence that this could
be an easily learned and very fun to use digital world to live in.
</p>
<p>
  There are surprisingly few modern tools that reference back to Jump and the
Canon Cat. One notable one is the <a href="https://100r.co/site/left.html" target="_blank">Left</a> text editor by 100 Rabbits, which very
recently
<a href="https://twitter.com/hundredrabbits/status/1466832328462790656?s=21" target="_blank">added Leap</a>.
</p>
<p>
  Here are some resources with a lot more content, digitized instruction manuals,
history, and other bits and bobs down this particular rabbit hole:
</p>
<ul>
  <li>
    <p>
      <a href="http://www.canoncat.net/" target="_blank">canoncat.net</a>
    </p>
  </li>
  <li>
    <p>
      <a href="https://www.canoncat.org/" target="_blank">canoncat.org</a>
    </p>
  </li>
  <li>
    <p>
      <a href="https://www.old-computers.com/museum/computer.asp?st=1&amp;c=642" target="_blank">Canon Cat on old-computers.com</a>
    </p>
  </li>
  <li>
    <p>
      <a href="https://en.wikipedia.org/wiki/The_Humane_Interface" target="_blank">The Humane Interface</a>
    </p>
  </li>
</ul>
<p>
  Finally, I'll leave you with this convincing promotional video showing off the
Cat in use, showing both more of what it can do<a href="#fn-calc" id="fn-calc.ref" data-footnote-ref aria-label="note"><sup>2</sup></a> as well as some truly
excellent '80s hairstyles.
</p>
<Youtube video="o_TlE_U_X3c" aspectRatio="1.3333333333333333"></Youtube>
<section data-footnotes aria-label="footnotes">
  <ol>
    <li id="fn-creep">
      <p>
        Arrow behavior is kinda still there. Tapping Leap on its own moves the
cursor ahead by one (akin to an arrow key); they fittingly called this
&quot;Creep&quot;. Shift+Leap would scroll the page up and down.
      </p>
      <a href="#fn-creep.ref" data-footnote-backref aria-label="return">↩</a>
    </li>
    <li id="fn-calc">
      <p>
        Like running calculations (or code!) live in a document with a key press
instead of having a dedicated calc app. Really cool ideas.
      </p>
      <a href="#fn-calc.ref" data-footnote-backref aria-label="return">↩</a>
    </li>
  </ol>
</section>]]></content>
    <rights>© 2022 Lee Byron ⸱ licensed under CC BY 4.0</rights>
  </entry>
  <entry>
    <id>
      https://leebyron.com/til/meta-tags-and-the-semantic-web/
    </id>
    <link rel="alternate" type="text/html" href="https://leebyron.com/til/meta-tags-and-the-semantic-web/"/>
    <published>2022-01-11T22:53:30.000-08:00</published>
    <updated>2022-01-12T21:57:12.000+00:00</updated>
    <title>meta tags &amp; the semantic web</title>
    <author>
      <name>Lee Byron</name>
      <uri>https://leebyron.com</uri>
    </author>
    <category term="web"/>
    <content type="html"><![CDATA[<p>
  For better or worse these days a lot of the web is consumed via an aggregator
platform. Search engines like Google, or Duck Duck Go, and social media like
Facebook, Twitter, Reddit, and Mastodon. When links are displayed on these
platforms, they use available metadata to give as rich a preview as possible.
</p>
<p>
  This is the reality of the branch of the multiverse we find ourselves in tracing
back to a quote from Sir Tim Berners Lee from
<a href="https://youtu.be/vG8WpLr6y_U?" target="_blank">1999</a>:
</p>
<blockquote>
  <p>
    I have a dream for the Web [in which computers] become capable of analyzing
all the data on the Web – the content, links, and transactions between people
and computers. A &quot;Semantic Web&quot;, which makes this possible, has yet to emerge,
but when it does, the day-to-day mechanisms of trade, bureaucracy and our
daily lives will be handled by machines talking to machines.
  </p>
</blockquote>
<p>
  Some variation of this is is right...
</p>
<p>
  However, for us Webmasters, it's tough to keep track of the peculiarities of how
each platform would like to consume semantic information. Having just added some
meta data to this very page, I'll drop some links and tl;dr of what I learned
along the way:
</p>
<ul>
  <li>
    <p>
      <a href="https://www.w3.org/RDF/" target="_blank">RDF</a> (Resource Description Language) and <a href="https://en.wikipedia.org/wiki/Web_Ontology_Language" target="_blank">OWL</a> (Web Ontology Language) were
early standards that live on. They don't get a lot of direct practical
use<a href="#fn-rdfa" id="fn-rdfa.ref" data-footnote-ref aria-label="note"><sup>1</sup></a>. There is also <a href="https://microformats.io/" target="_blank">microformats</a> which still has some use, but is no
longer preferred.
    </p>
  </li>
  <li>
    <p>
      <a href="https://ogp.me/" target="_blank">Open Graph</a> is a standard proposed by Facebook which addressed the mess that
was the web at the time<a href="#fn-og-deck" id="fn-og-deck.ref" data-footnote-ref aria-label="note"><sup>2</sup></a>. It has a surprisingly broad schema and some
quirks<a href="#fn-og-non-standard" id="fn-og-non-standard.ref" data-footnote-ref aria-label="note"><sup>3</sup></a>. Since then, <a href="https://json-ld.org/" target="_blank">JSON-LD</a> has become the preferred tool.
JSON is way easier for representing data, and there's a huge set of
<a href="https://schema.org/docs/schemas.html" target="_blank">available schema</a>.
    </p>
  </li>
  <li>
    <p>
      <a href="https://developers.facebook.com/docs/sharing/webmasters/#markup" target="_blank">Facebook</a> (and other Meta apps, like Messenger) use Open Graph with some
minor Facebook specific additions.
    </p>
    <ul>
      <li>
        <p>
          Use the <a href="https://developers.facebook.com/tools/debug/" target="_blank">share debugger</a> to
see what information was parsed and any warnings. It shows a share preview
based on an older version of their desktop site and can't be relied on.
        </p>
      </li>
    </ul>
  </li>
  <li>
    <p>
      <a href="https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/markup" target="_blank">Twitter</a> uses Open Graph if it finds them, but adds &quot;Card Tags&quot;. This is most
helpful when you want something to appear slightly differently on Twitter vs
Facebook.
    </p>
    <ul>
      <li>
        <p>
          Use their <a href="https://cards-dev.twitter.com/validator" target="_blank">card validator</a> to see
what a card will look like. This shows for desktop, I'm not aware of a
mobile preview.
        </p>
      </li>
    </ul>
  </li>
  <li>
    <p>
      <a href="https://developers.google.com/search/docs/advanced/structured-data/intro-structured-data" target="_blank">Google</a> will also use Open Graph if it finds it, but prefers <a href="https://json-ld.org/" target="_blank">JSON-LD</a>.
    </p>
    <ul>
      <li>
        <p>
          There are
<a href="https://developers.google.com/search/docs/advanced/structured-data" target="_blank">multiple validators</a>
for both generic JSON-LD and Google specific results. Despite being the most
mature of these tools, I've found it least helpful in giving error messages.
Caveat caelator.
        </p>
      </li>
    </ul>
  </li>
</ul>
<p>
  One last resource that I found very helpful was the <a href="http://linter.structured-data.org/" target="_blank">structured data linter</a>.
This tool understands just about all of the above. It's not all that helpful for
understanding how any one service will interpret your page, but is very useful
to ensure the meta data you expect is being found, and that there are no
inconsistencies or other problems.
</p>
<section data-footnotes aria-label="footnotes">
  <ol>
    <li id="fn-rdfa">
      <p>
        RDF actually does get a fair amount of practical use via <a href="https://www.w3.org/TR/rdfa-primer/" target="_blank">RDFa</a> (RDF for
attributes) because it can markup existing HTML files as opposed to
requiring separate XML files. In fact, this site uses RDFa to embed
licensing data in the footer! Check it out in the
<a href="http://linter.structured-data.org/?url=https:%2F%2Fleebyron.com%2Ftil%2Fmeta-tags-and-the-semantic-web%2F" target="_blank">structured data linter</a>.
      </p>
      <a href="#fn-rdfa.ref" data-footnote-backref aria-label="return">↩</a>
    </li>
    <li id="fn-og-deck">
      <p>
        Facebook made an interesting
<a href="https://www.scribd.com/doc/30715288/The-Open-Graph-Protocol-Design-Decisions" target="_blank">deck on the design decisions</a>
of Open Graph that details these problems. It's an interesting read.
      </p>
      <a href="#fn-og-deck.ref" data-footnote-backref aria-label="return">↩</a>
    </li>
    <li id="fn-og-non-standard">
      <p>
        Open Graph uses <code>&lt;meta&gt;</code> tags, but annoyingly uses a
<code>property=</code> attribute which was borrowed from RDF but is non standard for a
<code>&lt;meta&gt;</code> tag. It ideally should have used <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-name" target="_blank"><code>name=</code></a> (which Twitter cards does).
Someone should have caught that in code review.
      </p>
      <a href="#fn-og-non-standard.ref" data-footnote-backref aria-label="return">↩</a>
    </li>
  </ol>
</section>]]></content>
    <rights>© 2022 Lee Byron ⸱ licensed under CC BY 4.0</rights>
  </entry>
  <entry>
    <id>https://leebyron.com/til/by-rss-you-mean-atom/</id>
    <link rel="alternate" type="text/html" href="https://leebyron.com/til/by-rss-you-mean-atom/"/>
    <published>2022-01-10T21:50:17.000-08:00</published>
    <updated>2022-01-12T08:47:25.000+00:00</updated>
    <title>by RSS you mean Atom</title>
    <author>
      <name>Lee Byron</name>
      <uri>https://leebyron.com</uri>
    </author>
    <category term="til"/>
    <content type="html"><![CDATA[<p>
  I set about adding an &quot;RSS feed&quot; for this til site, only to find that despite
reader apps calling themselves &quot;RSS readers&quot;, that most &quot;RSS&quot; feeds out there
are not actually written in <a href="https://www.rssboard.org/rss-specification" target="_blank">RSS</a>, they're mostly written in <a href="https://datatracker.ietf.org/doc/html/rfc4287" target="_blank">Atom</a>. There are
actually a small handful of feed document formats out there, and RSS is sort of
the &quot;Kleenex&quot; of the feed marketplace: all feeds find themselves called &quot;RSS&quot;
when they may not be.
</p>
<p>
  RSS was created in 1999 (the
<a href="https://www.youtube.com/watch?v=vG8WpLr6y_U" target="_blank">best era of the web</a> if you ask
me) by Netscape as a simplification of RDF. It was ...tossed over the wall. This
was right about the time of the Netscape &amp; AOL merger, and RSS disappeared from
netscape.com. Meanwhile RSS was <em>very popular</em> in the early days of the internet
and adopted by many media companies figuring out this whole world wide web
thing. In 2002 the version of RSS we mostly know was created by an independent
group (retitled from &quot;Rich Site Summary&quot; to &quot;Really Simple Syndication&quot;) but
under dubious legal circumstances and under the shadow of the AOL/Netflix
conglomerate which technically owned the copyright.
</p>
<p>
  Emerge <a href="https://datatracker.ietf.org/doc/html/rfc4287" target="_blank">Atom</a>, an open standard introduced in 2003 meant to replace RSS. It's
vendor neutral and open, solves some of RSS's quirks, extensible,
internationalized, championed by Google and other cool young tech companies, and
even blessed by the IETF as RFC4287. And it still gets called &quot;RSS&quot;, sigh...
open source is hard sometimes.
</p>
<p>
  Two decades later, please use <a href="https://datatracker.ietf.org/doc/html/rfc4287" target="_blank">Atom</a> for your syndication feeds. It has been
hardened by two decades of use and still works great.
</p>
<p>
  In fact, even this site <a href="https://leebyron.com/til/feed.xml" target="_blank">has one</a>! Consider
subscribing with <a href="https://netnewswire.com/" target="_blank">NetNewsWire</a>, an open source feed reader.
</p>]]></content>
    <rights>© 2022 Lee Byron ⸱ licensed under CC BY 4.0</rights>
  </entry>
  <entry>
    <id>https://leebyron.com/til/ascii-table/</id>
    <link rel="alternate" type="text/html" href="https://leebyron.com/til/ascii-table/"/>
    <published>2022-01-09T23:49:50.000-08:00</published>
    <updated>2022-01-12T08:47:25.000+00:00</updated>
    <title>ascii table</title>
    <author>
      <name>Lee Byron</name>
      <uri>https://leebyron.com</uri>
    </author>
    <content type="html"><![CDATA[<p>
  The <a href="https://en.wikipedia.org/wiki/ASCII" target="_blank">ASCII</a> 7-bit character encoding is ubiquitous<a href="#fn-actually-utf8" id="fn-actually-utf8.ref" data-footnote-ref aria-label="note"><sup>1</sup></a> and
foundational to how computers talk to each other. It has an absolutely
fascinating history that dates surprisingly far back. The ASCII standard started
in 1963, and was iterated until 1986. ASCII was based on ITA2, a telegraph
standard from 1924, which itself derived from <a href="https://en.wikipedia.org/wiki/Baudot_code" target="_blank">Baudot code</a> from 1870—literally
the beginning of digital communication (the namesake for &quot;baud&quot; speed).
</p>
<style>.ascii-table td:first-child { background: #00000008; }</style>
<pre class="ascii-table"><div class="table-wrapper"><table><thead><tr><th></th><th><code>0x00</code></th><th><code>0x10</code></th><th><code>0x20</code></th><th><code>0x30</code></th><th><code>0x40</code></th><th><code>0x50</code></th><th><code>0x60</code></th><th><code>0x70</code></th></tr></thead><tbody><tr><td><strong><code>0x00</code></strong></td><td><a href="https://en.wikipedia.org/wiki/Null_character" title="Null" target="_blank"><code>␀</code></a> <code>⌃@</code> <code>\0</code></td><td><a href="https://en.wikipedia.org/wiki/Data_Link_Escape" title="Data Link Escape" target="_blank"><code>␐</code></a> <code>⌃P</code></td><td>Space</td><td><code>0</code></td><td><code>@</code></td><td><code>P</code></td><td><code>`</code></td><td><code>p</code></td></tr><tr><td><strong><code>0x01</code></strong></td><td><a href="https://en.wikipedia.org/wiki/Start_of_Heading" title="Start of Heading" target="_blank"><code>␁</code></a> <code>⌃A</code></td><td><a href="https://en.wikipedia.org/wiki/Device_Control_1" title="Device Control 1 / XON / Resume" target="_blank"><code>␑</code></a> <code>⌃Q</code></td><td><code>!</code></td><td><code>1</code></td><td><code>A</code></td><td><code>Q</code></td><td><code>a</code></td><td><code>q</code></td></tr><tr><td><strong><code>0x02</code></strong></td><td><a href="https://en.wikipedia.org/wiki/Start_of_Text" title="Start of Text" target="_blank"><code>␂</code></a> <code>⌃B</code></td><td><a href="https://en.wikipedia.org/wiki/Device_Control_2" title="Device Control 2" target="_blank"><code>␒</code></a> <code>⌃R</code></td><td><code>&quot;</code></td><td><code>2</code></td><td><code>B</code></td><td><code>R</code></td><td><code>b</code></td><td><code>r</code></td></tr><tr><td><strong><code>0x03</code></strong></td><td><a href="https://en.wikipedia.org/wiki/End-of-Text_character" title="End of Text" target="_blank"><code>␃</code></a> <code>⌃C</code></td><td><a href="https://en.wikipedia.org/wiki/Device_Control_3" title="Device Control 3 / XOFF / Pause" target="_blank"><code>␓</code></a> <code>⌃S</code></td><td><code>#</code></td><td><code>3</code></td><td><code>C</code></td><td><code>S</code></td><td><code>c</code></td><td><code>s</code></td></tr><tr><td><strong><code>0x04</code></strong></td><td><a href="https://en.wikipedia.org/wiki/End-of-Transmission_character" title="End of Transmission" target="_blank"><code>␄</code></a> <code>⌃D</code></td><td><a href="https://en.wikipedia.org/wiki/Device_Control_4" title="Device Control 4" target="_blank"><code>␔</code></a> <code>⌃T</code></td><td><code>$</code></td><td><code>4</code></td><td><code>D</code></td><td><code>T</code></td><td><code>d</code></td><td><code>t</code></td></tr><tr><td><strong><code>0x05</code></strong></td><td><a href="https://en.wikipedia.org/wiki/Enquiry_character" title="Enquiry" target="_blank"><code>␅</code></a> <code>⌃E</code></td><td><a href="https://en.wikipedia.org/wiki/Negative-acknowledge_character" title="Negative Acknowledgement" target="_blank"><code>␕</code></a> <code>⌃U</code></td><td><code>%</code></td><td><code>5</code></td><td><code>E</code></td><td><code>U</code></td><td><code>e</code></td><td><code>u</code></td></tr><tr><td><strong><code>0x06</code></strong></td><td><a href="https://en.wikipedia.org/wiki/Acknowledge_character" title="Acknowledgement" target="_blank"><code>␆</code></a> <code>⌃F</code></td><td><a href="https://en.wikipedia.org/wiki/Synchronous_Idle" title="Synchronous Idle" target="_blank"><code>␖</code></a> <code>⌃V</code></td><td><code>&amp;</code></td><td><code>6</code></td><td><code>F</code></td><td><code>V</code></td><td><code>f</code></td><td><code>v</code></td></tr><tr><td><strong><code>0x07</code></strong></td><td><a href="https://en.wikipedia.org/wiki/Bell_character" title="Bell" target="_blank"><code>␇</code></a> <code>⌃G</code> <code>\a</code></td><td><a href="https://en.wikipedia.org/wiki/End-of-Transmission-Block_character" title="End of Transmission Block" target="_blank"><code>␗</code></a> <code>⌃W</code></td><td><code>'</code></td><td><code>7</code></td><td><code>G</code></td><td><code>W</code></td><td><code>g</code></td><td><code>w</code></td></tr><tr><td><strong><code>0x08</code></strong></td><td><a href="https://en.wikipedia.org/wiki/Backspace" title="Backspace" target="_blank"><code>␈</code></a> <code>⌃H</code> <code>\b</code></td><td><a href="https://en.wikipedia.org/wiki/Cancel_character" title="Cancel" target="_blank"><code>␘</code></a> <code>⌃X</code></td><td><code>(</code></td><td><code>8</code></td><td><code>H</code></td><td><code>X</code></td><td><code>h</code></td><td><code>x</code></td></tr><tr><td><strong><code>0x09</code></strong></td><td><a href="https://en.wikipedia.org/wiki/Horizontal_Tab" title="Horizontal Tab" target="_blank"><code>␉</code></a> <code>⌃I</code> <code>\t</code></td><td><a href="https://en.wikipedia.org/wiki/End_of_Medium" title="End of Medium" target="_blank"><code>␙</code></a> <code>⌃Y</code></td><td><code>)</code></td><td><code>9</code></td><td><code>I</code></td><td><code>Y</code></td><td><code>i</code></td><td><code>y</code></td></tr><tr><td><strong><code>0x0A</code></strong></td><td><a href="https://en.wikipedia.org/wiki/Line_Feed" title="Line Feed" target="_blank"><code>␊</code></a> <code>⌃J</code> <code>\n</code></td><td><a href="https://en.wikipedia.org/wiki/Substitute_character" title="Substitute" target="_blank"><code>␚</code></a> <code>⌃Z</code></td><td><code>*</code></td><td><code>:</code></td><td><code>J</code></td><td><code>Z</code></td><td><code>j</code></td><td><code>z</code></td></tr><tr><td><strong><code>0x0B</code></strong></td><td><a href="https://en.wikipedia.org/wiki/Vertical_Tab" title="Vertical Tab" target="_blank"><code>␋</code></a> <code>⌃H</code> <code>\v</code></td><td><a href="https://en.wikipedia.org/wiki/Escape_character" title="Escape" target="_blank"><code>␛</code></a> <code>⌃[</code> <code>\e</code></td><td><code>+</code></td><td><code>;</code></td><td><code>K</code></td><td><code>[</code></td><td><code>k</code></td><td><code>{</code></td></tr><tr><td><strong><code>0x0C</code></strong></td><td><a href="https://en.wikipedia.org/wiki/Form_Feed" title="Form Feed" target="_blank"><code>␌</code></a> <code>⌃L</code> <code>\f</code></td><td><a href="https://en.wikipedia.org/wiki/File_Separator" title="File Separator" target="_blank"><code>␜</code></a> <code>⌃\</code></td><td><code>,</code></td><td><code>&lt;</code></td><td><code>L</code></td><td><code>\</code></td><td><code>l</code></td><td><code>|</code></td></tr><tr><td><strong><code>0x0D</code></strong></td><td><a href="https://en.wikipedia.org/wiki/Carriage_Return" title="Carriage Return" target="_blank"><code>␍</code></a> <code>⌃M</code> <code>\r</code></td><td><a href="https://en.wikipedia.org/wiki/Group_Separator" title="Group Separator" target="_blank"><code>␝</code></a> <code>⌃]</code></td><td><code>-</code></td><td><code>=</code></td><td><code>M</code></td><td><code>]</code></td><td><code>m</code></td><td><code>}</code></td></tr><tr><td><strong><code>0x0E</code></strong></td><td><a href="https://en.wikipedia.org/wiki/Shift_Out" title="Shift Out" target="_blank"><code>␎</code></a> <code>⌃N</code></td><td><a href="https://en.wikipedia.org/wiki/Record_Separator" title="Record Separator" target="_blank"><code>␞</code></a> <code>⌃^</code></td><td><code>.</code></td><td><code>&gt;</code></td><td><code>N</code></td><td><code>^</code></td><td><code>n</code></td><td><code>~</code></td></tr><tr><td><strong><code>0x0F</code></strong></td><td><a href="https://en.wikipedia.org/wiki/Shift_In" title="Shift In" target="_blank"><code>␏</code></a> <code>⌃O</code></td><td><a href="https://en.wikipedia.org/wiki/Unit_Separator" title="Unit Separator" target="_blank"><code>␟</code></a> <code>⌃_</code></td><td><code>/</code></td><td><code>?</code></td><td><code>O</code></td><td><code>_</code></td><td><code>o</code></td><td><a href="https://en.wikipedia.org/wiki/Delete_character" title="Delete" target="_blank"><code>␡</code></a> <code>⌃?</code></td></tr></tbody></table></div></pre>
<h2 id="other-fun-facts-about-ascii">
  <a href="#other-fun-facts-about-ascii" data-anchor>Other fun facts about ASCII:</a>
</h2>
<ul>
  <li>
    <p>
      The first 128 Unicode values are ASCII. UTF-8, the most common modern
encoding, uses a variable number of bytes to cover the full Unicode spectrum,
but just happens to use exactly one byte for the first 128 and exactly matches
ASCII. That means every ancient ASCII file is also a valid modern UTF-8 file.
This is a <em>beautiful</em> hack and a major reason for the success of UTF-8.
    </p>
  </li>
  <li>
    <p>
      The number digits are carefully placed so <a href="https://en.wikipedia.org/wiki/Binary-coded_decimal" target="_blank">BCD</a> can be converted to ASCII and
vice-versa in one instruction: <code>ascii = bcd XOR 0x30</code>.
    </p>
  </li>
  <li>
    <p>
      Many keys you still reach via &quot;shift&quot; on a modern keyboard are either <code>0x10</code>
or <code>0x20</code> above their standard key, a holdover from mechanical typewriters.
    </p>
  </li>
  <li>
    <p>
      Lowercase letters are exactly <code>0x20</code> above uppercase.
    </p>
  </li>
  <li>
    <p>
      Your &quot;control&quot; key has a <code>⌃</code> on it because its original purpose was to remap
typical keys to control keys by xor'ing the highest bit <code>0x40</code> (<code>XOR</code> also
happens to be <code>^</code> in C). Some of these vestiges of the past still work
everywhere, and all should work in your terminal! Try <code>⌃H</code> for a home-row
oriented backspace.
    </p>
  </li>
</ul>
<section data-footnotes aria-label="footnotes">
  <ol>
    <li id="fn-actually-utf8">
      <p>
        These days it's really UTF-8 thats ubiquitous.
      </p>
      <a href="#fn-actually-utf8.ref" data-footnote-backref aria-label="return">↩</a>
    </li>
  </ol>
</section>]]></content>
    <rights>© 2022 Lee Byron ⸱ licensed under CC BY 4.0</rights>
  </entry>
  <entry>
    <id>
      https://leebyron.com/til/setup-a-simple-screencast/
    </id>
    <link rel="alternate" type="text/html" href="https://leebyron.com/til/setup-a-simple-screencast/"/>
    <published>2022-01-07T22:35:43.000-08:00</published>
    <updated>2022-01-12T08:47:25.000+00:00</updated>
    <title>setup a simple screencast</title>
    <author>
      <name>Lee Byron</name>
      <uri>https://leebyron.com</uri>
    </author>
    <content type="html"><![CDATA[<p>
  There's plenty of good software out there for screencasting, but if you're in a
pinch Quicktime Player does a solid job with a bit of prep.
</p>
<ol start="1">
  <li>
    <p>
      Get a clear desktop and open all windows you want to screencast, not full
screened. Also open Quicktime Player.
    </p>
    <ul>
      <li>
        <p>
          Don't forget to increase font size in any terminals, browsers, or IDEs to
increase visibility. 100 columns works okay.
        </p>
      </li>
    </ul>
  </li>
  <li>
    <p>
      File → New Movie Recording
    </p>
    <p>
      Don't actually record a movie. This just abuses the webcam preview so you can
have your face in the screen cast. Resize the window down and position it in
the corner of your desktop.
    </p>
  </li>
  <li>
    <p>
      File → New Screen Recording
    </p>
    <ul>
      <li>
        <p>
          Choose the &quot;Record Selected Portion&quot; and resize the area to be 1280×720 (or
a large size of the same aspect ratio if your screen allows).
        </p>
      </li>
      <li>
        <p>
          You can't move windows around while resizing the recording area, but you
can during recording. If necessary, start a recording to get windows all
lined up.
        </p>
      </li>
      <li>
        <p>
          Open options and make sure your microphone is on.
        </p>
      </li>
      <li>
        <p>
          Record! Press ⌘⌃esc to stop. Trim the resulting video.
        </p>
      </li>
    </ul>
  </li>
</ol>
<p>
  <img src="../media/7f2cdba5d3c1f40e.jpg">
</p>
<hr>
<p>
  I did exactly this to record a screencast about this very tool!
</p>
<div class="yt-player" style="--aspectRatio:1.7777777777777777;">
  <iframe src="https://www.youtube.com/embed/iJn9kZw-hw8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</div>]]></content>
    <rights>© 2022 Lee Byron ⸱ licensed under CC BY 4.0</rights>
  </entry>
  <entry>
    <id>https://leebyron.com/til/markdown-footnotes/</id>
    <link rel="alternate" type="text/html" href="https://leebyron.com/til/markdown-footnotes/"/>
    <published>2022-01-06T22:58:33.000-08:00</published>
    <updated>2022-01-12T08:47:25.000+00:00</updated>
    <title>markdown footnotes</title>
    <author>
      <name>Lee Byron</name>
      <uri>https://leebyron.com</uri>
    </author>
    <category term="markdown"/>
    <content type="html"><![CDATA[<p>
  Much like <a href="../markdown-link-references">markdown link references</a>, footnotes are defined in one place and
referenced in another, but it doesn't matter where the footnote is defined,
they'll always be collected at the end of the document in the order in which
they are referenced<a href="#fn-a-note" id="fn-a-note.ref" data-footnote-ref aria-label="note"><sup>1</sup></a>.
</p>
<p>
  Footnotes are created similar to shortcut reference links, but the identifier
starts with a <code>^</code>.
</p>
<pre data-code-block data-lang="markdown"><code><span style="color:#24292EFF;">order in which they are referenced[^a note].</span>
</code></pre>
<p>
  A footnote definition is formatted exactly like link reference
definitions<a href="#fn-needs-cr" id="fn-needs-cr.ref" data-footnote-ref aria-label="note"><sup>2</sup></a>: in a box followed by a comma.
</p>
<pre data-code-block data-lang="markdown"><code><span style="color:#24292EFF;">[^a note]: Despite footnotes appearing numbered, the identifier can be any text.</span>
<span style="color:#24292EFF;">This is helpful if you may add more notes later and don't want to be bothered to</span>
<span style="color:#24292EFF;">reorder them.</span>
</code></pre>
<section data-footnotes aria-label="footnotes">
  <ol>
    <li id="fn-a-note">
      <p>
        Despite footnotes appearing numbered, the identifier can be any text.
This is helpful if you may add more notes later and don't want to be bothered to
reorder them.
      </p>
      <a href="#fn-a-note.ref" data-footnote-backref aria-label="return">↩</a>
    </li>
    <li id="fn-needs-cr">
      <p>
        Unlike a link reference definition, a footnote definition needs an
empty line immediately after it, otherwise content from multiple lines is joined
into a single paragraph.
      </p>
      <a href="#fn-needs-cr.ref" data-footnote-backref aria-label="return">↩</a>
    </li>
  </ol>
</section>]]></content>
    <rights>© 2022 Lee Byron ⸱ licensed under CC BY 4.0</rights>
  </entry>
  <entry>
    <id>
      https://leebyron.com/til/markdown-link-references/
    </id>
    <link rel="alternate" type="text/html" href="https://leebyron.com/til/markdown-link-references/"/>
    <published>2022-01-05T10:40:18.000-08:00</published>
    <updated>2022-01-07T21:34:42.000+00:00</updated>
    <title>markdown link references</title>
    <author>
      <name>Lee Byron</name>
      <uri>https://leebyron.com</uri>
    </author>
    <category term="markdown"/>
    <content type="html"><![CDATA[<p>
  Inline markdown links and images can be hard to read with long URLs. References
are a great way to keep prose readable and keep a catalog of links. There are
<a href="https://spec.commonmark.org/0.30/#links" title="Nearly a hundred tests" target="_blank">quite a few variations</a> of the syntax.
</p>
<p>
  Write references with a box around the reference identifier followed by a colon
and the URL, optionally include a trailing title in quotes (which may go on the
following line):
</p>
<pre data-code-block data-lang="markdown"><code><span style="color:#24292EFF;">[links]</span><span style="color:#D32F2F;">:</span><span style="color:#24292EFF;"> </span><span style="color:#22863A;">https://spec.commonmark.org/0.30/#links</span>
<span style="color:#24292EFF;">[links]</span><span style="color:#D32F2F;">:</span><span style="color:#24292EFF;"> </span><span style="color:#22863A;">https://spec.commonmark.org/0.30/#links</span><span style="color:#24292EFF;"> </span><span style="color:#D32F2F;">'</span><span style="color:#2B5581;">Nearly a hundred tests</span><span style="color:#D32F2F;">'</span>
</code></pre>
<p>
  Then within prose, refer to them with typical link syntax, but with a trailing
box instead of parentheses. If the linked text is the same as the identifier,
just use a standalone box.
</p>
<pre data-code-block data-lang="markdown"><code><span style="color:#24292EFF;">Here is a link about </span><span style="color:#D32F2F;">[markdown links]</span><span style="color:#24292EFF;">[links]. What's the web without </span><span style="color:#D32F2F;">[links]</span><span style="color:#24292EFF;">?</span>
</code></pre>
<p>
  Here is a link about <a href="https://spec.commonmark.org/0.30/#links" title="Nearly a hundred tests" target="_blank">markdown links</a>. What's the web without <a href="https://spec.commonmark.org/0.30/#links" title="Nearly a hundred tests" target="_blank">links</a>?
</p>
<p>
  References can appear anywhere in a Markdown file. I often place them right
after the paragraph where they're used. If they're used in multiple places, I'll
group them together at the end of a section or end of the whole document.
</p>
<hr>
<p>
  References can also be used for images. The syntax for the reference is the
same, but the image use itself starts with an <code>!</code>.
</p>
<pre data-code-block data-lang="markdown"><code><span style="color:#24292EFF;">!</span><span style="color:#D32F2F;">[moebius]</span>

<span style="color:#24292EFF;">[moebius]</span><span style="color:#D32F2F;">:</span><span style="color:#24292EFF;"> </span><span style="color:#22863A;">https://uploads4.wikiart.org/images/m-c-escher/bond-of-union.jpg</span>
<span style="color:#24292EFF;">'Bond of Union, M.C. Escher 1956'</span>
</code></pre>
<p>
  <img src="https://uploads4.wikiart.org/images/m-c-escher/bond-of-union.jpg" title="Bond of Union, M.C. Escher 1956">
</p>]]></content>
    <rights>© 2022 Lee Byron ⸱ licensed under CC BY 4.0</rights>
  </entry>
  <entry>
    <id>https://leebyron.com/til/how-to-rearrange-bits/</id>
    <link rel="alternate" type="text/html" href="https://leebyron.com/til/how-to-rearrange-bits/"/>
    <published>2022-01-04T00:58:22.000-08:00</published>
    <updated>2022-01-12T08:47:25.000+00:00</updated>
    <title>how to rearrange bits</title>
    <author>
      <name>Lee Byron</name>
      <uri>https://leebyron.com</uri>
    </author>
    <content type="html"><![CDATA[<p>
  If you have a bit-powered display where the elements don't align to the bits in
the byte, you may want to remap bits from the source byte to the destination
byte. Manually writing a bunch of shifts is frustrating, and I found a great
tool which writes this code for you!
</p>
<p>
  <a href="http://programming.sirrida.de/calcperm.php" target="_blank">http://programming.sirrida.de/calcperm.php</a>
</p>
<p>
  I just used this to map sprite binary data to Unicode
<a href="https://www.fileformat.info/info/unicode/block/braille_patterns/list.htm" target="_blank">braille patterns</a>.
The 8 dots in a braille pattern can map to a byte, but perhaps not in the order
you expect.
</p>]]></content>
    <rights>© 2022 Lee Byron ⸱ licensed under CC BY 4.0</rights>
  </entry>
  <entry>
    <id>https://leebyron.com/til/changing-a-word-in-vim/</id>
    <link rel="alternate" type="text/html" href="https://leebyron.com/til/changing-a-word-in-vim/"/>
    <published>2022-01-03T16:34:57.000-08:00</published>
    <updated>2022-01-12T08:47:25.000+00:00</updated>
    <title>changing a word in vim</title>
    <author>
      <name>Lee Byron</name>
      <uri>https://leebyron.com</uri>
    </author>
    <category term="vim"/>
    <content type="html"><![CDATA[<p>
  The <code>c</code> key starts a chord to change something. This is super useful for
changing the word under the cursor. <code>cw</code> will change from the current position
until the end of the next word, and <code>ciw</code> will change the whole word under the
cursor (read: <code>c</code>hange <code>i</code>n <code>w</code>ord).
</p>
<hr>
<p>
  This, combined with other movements can lead to very quick changes. One I've
found quite useful is <code>ci&quot;</code> which changes the contents of a quoted string, and
<code>ca&quot;</code> (<code>c</code>hange <code>a</code>ll <code>&quot;</code>quoted) to include the quote marks themselves. Or when
working in prose, <code>cis</code> will change the current sentence and <code>cip</code> the current
paragraph.
</p>
<p>
  Sometimes a change command is hard to think about first, or the area you want to
change is subtly different from what the change command would do. Replace <code>c</code>
with <code>v</code> to get a similar visual motion (like <code>v3w</code> for 3 words), muck about,
then press <code>c</code> to change.
</p>
<p>
  Changing the whole line (but keeping the indentation) is simply <code>cc</code>.
</p>]]></content>
    <rights>© 2022 Lee Byron ⸱ licensed under CC BY 4.0</rights>
  </entry>
</feed>